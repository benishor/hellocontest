// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QSO struct {
	Callsign             string   `protobuf:"bytes,1,opt,name=callsign" json:"callsign,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Band                 string   `protobuf:"bytes,3,opt,name=band" json:"band,omitempty"`
	Mode                 string   `protobuf:"bytes,4,opt,name=mode" json:"mode,omitempty"`
	MyReport             string   `protobuf:"bytes,5,opt,name=my_report,json=myReport" json:"my_report,omitempty"`
	MyNumber             int32    `protobuf:"varint,6,opt,name=my_number,json=myNumber" json:"my_number,omitempty"`
	TheirReport          string   `protobuf:"bytes,7,opt,name=their_report,json=theirReport" json:"their_report,omitempty"`
	TheirNumber          int32    `protobuf:"varint,8,opt,name=their_number,json=theirNumber" json:"their_number,omitempty"`
	LogTimestamp         int64    `protobuf:"varint,9,opt,name=log_timestamp,json=logTimestamp" json:"log_timestamp,omitempty"`
	MyXchange            string   `protobuf:"bytes,10,opt,name=my_xchange,json=myXchange" json:"my_xchange,omitempty"`
	TheirXchange         string   `protobuf:"bytes,11,opt,name=their_xchange,json=theirXchange" json:"their_xchange,omitempty"`
	Frequency            float64  `protobuf:"fixed64,12,opt,name=frequency" json:"frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QSO) Reset()         { *m = QSO{} }
func (m *QSO) String() string { return proto.CompactTextString(m) }
func (*QSO) ProtoMessage()    {}
func (*QSO) Descriptor() ([]byte, []int) {
	return fileDescriptor_log_125c001abd52428b, []int{0}
}
func (m *QSO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QSO.Unmarshal(m, b)
}
func (m *QSO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QSO.Marshal(b, m, deterministic)
}
func (dst *QSO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QSO.Merge(dst, src)
}
func (m *QSO) XXX_Size() int {
	return xxx_messageInfo_QSO.Size(m)
}
func (m *QSO) XXX_DiscardUnknown() {
	xxx_messageInfo_QSO.DiscardUnknown(m)
}

var xxx_messageInfo_QSO proto.InternalMessageInfo

func (m *QSO) GetCallsign() string {
	if m != nil {
		return m.Callsign
	}
	return ""
}

func (m *QSO) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *QSO) GetBand() string {
	if m != nil {
		return m.Band
	}
	return ""
}

func (m *QSO) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *QSO) GetMyReport() string {
	if m != nil {
		return m.MyReport
	}
	return ""
}

func (m *QSO) GetMyNumber() int32 {
	if m != nil {
		return m.MyNumber
	}
	return 0
}

func (m *QSO) GetTheirReport() string {
	if m != nil {
		return m.TheirReport
	}
	return ""
}

func (m *QSO) GetTheirNumber() int32 {
	if m != nil {
		return m.TheirNumber
	}
	return 0
}

func (m *QSO) GetLogTimestamp() int64 {
	if m != nil {
		return m.LogTimestamp
	}
	return 0
}

func (m *QSO) GetMyXchange() string {
	if m != nil {
		return m.MyXchange
	}
	return ""
}

func (m *QSO) GetTheirXchange() string {
	if m != nil {
		return m.TheirXchange
	}
	return ""
}

func (m *QSO) GetFrequency() float64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func init() {
	proto.RegisterType((*QSO)(nil), "pb.QSO")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_log_125c001abd52428b) }

var fileDescriptor_log_125c001abd52428b = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xcb, 0x4e, 0xeb, 0x30,
	0x10, 0x86, 0xe5, 0x24, 0xed, 0x89, 0xa7, 0xe9, 0x11, 0xf2, 0xca, 0x82, 0x22, 0x05, 0xd8, 0x64,
	0xc5, 0x86, 0xb7, 0x60, 0x01, 0x22, 0xb0, 0x60, 0x17, 0x25, 0xa9, 0x49, 0x23, 0xf9, 0x12, 0x5c,
	0x57, 0xc2, 0xef, 0xcd, 0x03, 0xa0, 0x8c, 0x73, 0xd9, 0x79, 0xbe, 0xf9, 0x2f, 0x1a, 0x19, 0xa8,
	0x34, 0xdd, 0xe3, 0x60, 0x8d, 0x33, 0x2c, 0x1a, 0x9a, 0xfb, 0xdf, 0x08, 0xe2, 0xb7, 0xf7, 0x57,
	0x76, 0x0d, 0x69, 0x5b, 0x4b, 0x79, 0xee, 0x3b, 0xcd, 0x49, 0x4e, 0x0a, 0x5a, 0x2e, 0x33, 0x3b,
	0x00, 0x75, 0xbd, 0x12, 0x67, 0x57, 0xab, 0x81, 0x47, 0x39, 0x29, 0xe2, 0x72, 0x05, 0x8c, 0x41,
	0xd2, 0xd4, 0xfa, 0xc8, 0x63, 0x74, 0xe1, 0x7b, 0x64, 0xca, 0x1c, 0x05, 0x4f, 0x02, 0x1b, 0xdf,
	0xec, 0x06, 0xa8, 0xf2, 0x95, 0x15, 0x83, 0xb1, 0x8e, 0x6f, 0x42, 0x85, 0xf2, 0x25, 0xce, 0xd3,
	0x52, 0x5f, 0x54, 0x23, 0x2c, 0xdf, 0xe6, 0xa4, 0xd8, 0x8c, 0xcb, 0x17, 0x9c, 0xd9, 0x1d, 0x64,
	0xee, 0x24, 0x7a, 0x3b, 0x9b, 0xff, 0xa1, 0x79, 0x87, 0x6c, 0xf2, 0x2f, 0x92, 0x29, 0x22, 0xc5,
	0x88, 0x20, 0x99, 0x52, 0x1e, 0x60, 0x2f, 0x4d, 0x57, 0xad, 0x97, 0x50, 0xbc, 0x24, 0x93, 0xa6,
	0xfb, 0x58, 0x8e, 0xb9, 0x05, 0x50, 0xbe, 0xfa, 0x69, 0x4f, 0xb5, 0xee, 0x04, 0x07, 0x2c, 0xa2,
	0xca, 0x7f, 0x06, 0x30, 0x66, 0x84, 0x9a, 0x59, 0xb1, 0x43, 0x45, 0xe8, 0x9e, 0x45, 0x07, 0xa0,
	0x5f, 0x56, 0x7c, 0x5f, 0x84, 0x6e, 0x3d, 0xcf, 0x72, 0x52, 0x90, 0x72, 0x05, 0xcf, 0x49, 0xba,
	0xbf, 0xfa, 0xdf, 0x6c, 0xf1, 0x07, 0x9e, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x5e, 0xf7,
	0x9e, 0x8e, 0x01, 0x00, 0x00,
}
