// Code generated by go-bindata. DO NOT EDIT.
// sources:
// contest.glade (79.751kB)

package glade

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _contestGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x5b\x73\xdb\x38\xb2\xff\xfb\x7c\x0a\xfc\xf9\xaf\x9a\xcd\xa9\x1d\x27\xb1\x93\xd9\xb3\x67\xc7\xd6\x96\xa3\xd8\xc9\xd4\xf8\x16\xcb\x33\xc9\x1b\x0b\x02\x5b\x12\xc6\x20\xc0\x01\xc0\xc8\xda\x3a\x1f\xfe\x14\x2f\xb2\x75\x21\x29\x82\xa2\x78\x91\xf8\x30\x53\x31\xc5\x6e\x02\xe8\x5f\x5f\xd0\x68\x00\xa7\xff\x7e\x72\x19\xfa\x0e\x52\x51\xc1\xcf\xac\xe3\xd7\x6f\x2d\x04\x9c\x08\x87\xf2\xf1\x99\xf5\xfb\xc3\xe5\xd1\x3f\xad\x7f\xf7\x7e\x38\xfd\x7f\x47\x47\xe8\x13\x70\x90\x58\x83\x83\xa6\x54\x4f\xd0\x98\x61\x07\xd0\xbb\xd7\x27\x27\xaf\x4f\xd0\xd1\x51\xef\x87\x53\xca\x35\xc8\x11\x26\xd0\xfb\x01\xa1\x53\x09\x7f\xf9\x54\x82\x42\x8c\x0e\xcf\xac\xb1\x7e\xfc\xbb\xf5\xf2\xa1\x77\xaf\x4f\xde\x5a\x6f\xc2\xf7\xc4\xf0\x4f\x20\x1a\x11\x86\x95\x3a\xb3\x3e\xe9\xc7\xaf\x94\x3b\x62\x6a\x21\xea\x9c\x59\x04\x33\x46\xf9\x48\xc4\xcf\x02\x02\x84\x4e\x3d\x29\x3c\x90\x7a\x86\x38\x76\x21\x78\x89\xdb\x23\x41\x7c\x65\xf5\x2e\x31\x53\x70\xfa\x66\xfe\x42\xf2\xfb\x98\x10\xf0\x74\x36\x09\x99\x50\xe6\x20\x3d\xf3\xe0\xcc\xd2\x54\x33\x18\x62\x19\x7f\x3e\x60\xc8\x30\x81\x89\x60\x0e\xc8\x37\x31\xc1\x9b\x90\x62\x91\xfa\xf9\xed\xb5\x1e\x7e\x92\xd4\x79\x66\xb6\xde\xbe\xef\x54\xd1\x21\x03\xab\xf7\x20\xfd\xb5\x96\x15\x19\x80\xf5\x36\x25\xb7\xeb\x0a\x0f\x81\xbd\x0c\xbc\xa2\x63\x1e\x3d\x5a\x24\x2b\xd0\xde\xa2\x6d\x4e\xa2\x9b\x60\x46\xc7\xdc\xea\x29\x8d\xa5\xce\x4b\xe4\x62\x39\xa6\xdc\x66\x30\xd2\x56\xef\xc4\x90\x4a\xd2\xf1\xc4\x84\x6c\x02\x4f\x1e\xe6\x8e\xd9\x70\xf8\x0a\x6c\x17\xcb\x47\xdf\x33\xa3\x9b\x4a\xbc\x89\x02\x6b\x2d\xe9\xd0\xd7\xa0\x96\x7f\x58\xfc\x29\xe6\xa6\x08\x66\x60\xa1\xef\x98\xf9\x70\x66\xbd\xb7\xde\xac\xb0\x7a\x93\xcc\xeb\xf4\x4d\x04\xa5\xa5\x67\x1e\x26\x8f\x94\x8f\xb3\x9b\x1f\x48\xc4\xc6\x5a\x63\x32\xb1\x7a\x6f\xf3\x76\x5a\x0b\x6f\x13\xd1\xe9\x9b\xb5\xef\x2f\xa9\x28\x32\x57\x09\xe7\x89\x90\x4e\x1d\xda\xad\x0e\x75\x22\xf5\xb8\x32\xa4\x86\xfa\xdb\x41\xb5\x83\x6a\x51\xa8\xa6\x8c\x58\x59\x50\x1d\x10\x29\x18\x03\x67\x31\xd2\x53\xbe\x07\x92\x4c\x80\x3c\xf6\x05\xd7\x98\x72\x90\x3b\x06\xaf\x09\x59\x21\x64\x7c\x2f\x42\xa4\x26\xd8\x11\x53\x3b\x88\x3c\xad\x1e\xe5\xa9\x64\x6b\xc3\x9c\x3c\xd4\x7f\x50\x98\x7a\x42\x6a\x6b\xf5\xd5\x82\xe3\xb9\x61\x4c\x33\x0d\x42\xe2\xc0\xe6\x31\x0a\x89\xad\x2d\x4a\x98\x4b\x94\x85\xc5\x99\x2e\x9b\x64\xf9\x2c\x58\xed\x17\x0d\x48\x32\xdd\x5b\x4b\x6d\x5b\xc9\x6d\x25\xbd\xad\x24\xb8\x95\x14\x13\xbf\xbc\x0d\x71\x5e\x7b\x9f\x46\xbf\x39\x62\x8f\xe9\x12\xec\xff\xfc\x97\x64\xe5\x4f\x24\x48\x78\xb9\x4e\xcf\xf2\xae\xa8\x67\x59\x6e\xf4\xc2\x8f\x8b\x3f\x64\x27\x13\x24\xd6\xb0\x5f\x89\x84\x24\x47\x1a\xf4\xf2\x01\x0f\x19\x24\xf9\xd1\x32\x53\x0d\x79\x49\x36\xaa\xaa\xb1\x7a\x16\xf0\x99\x79\xc2\x92\x14\x5f\x59\x6d\xd0\x9c\xd3\xaf\x2f\xf8\x8d\x67\x81\xa7\xb9\x8d\xce\xd1\xef\xca\xd1\x6f\xe1\x1a\xd6\x30\x0c\x0c\x88\xc6\x85\xe4\xa2\x25\x26\x8f\x76\x20\x56\x0d\x8e\xcd\x28\x7f\xdc\x2c\xa1\x2d\xbc\x45\xf9\x96\x59\x11\x21\x0f\xc0\x34\xeb\xce\x2c\x1f\x8e\x59\xd6\x9d\x49\xee\x4c\x72\xbb\x4c\xf2\x47\x8a\x99\x18\xc7\x26\x19\xb4\xa6\x7c\xac\xe2\x67\xe5\x58\xe5\xc0\x14\xd8\x13\xca\xb5\xd5\x73\x42\xbe\xbb\xb0\xc9\x28\x5c\x87\xe4\x98\x1d\x85\x7f\x9e\x59\xdf\x87\xe2\xc9\x4a\xb7\xd4\x1f\xc4\x53\xd4\xe5\xa1\x78\x3a\xce\x30\xca\xb9\x56\xd9\xd2\x00\x9f\x9b\x42\x48\x0a\x5c\x63\x4d\x05\xb7\x7a\xdf\x41\x6a\x4a\x30\xcb\x65\x6d\x3d\x4c\x28\x1f\x5b\xbd\xff\x49\x37\xb4\x6b\x43\x83\x49\xf0\x21\x1b\x4b\xc0\x56\xb6\x15\xfe\xe0\x6b\x2d\xf8\x87\x85\x91\x2c\x3e\x4a\x49\x74\x0c\xcf\x84\xaf\x6d\xa5\x67\x81\xba\x01\x77\xb6\x35\xc5\x51\x83\x23\xc9\x0a\x0f\xf8\x47\x18\x61\x9f\x69\x15\x3f\xdf\xac\xc2\x2c\xb2\xe5\x5a\x62\xae\x18\x0e\xed\xc0\x99\x35\x03\x65\xf5\x6e\x3d\xe0\xc8\x9e\x33\x34\xb2\x63\x25\xd8\x79\x53\x52\x09\x04\xe8\x77\x50\xb6\x13\x35\xb8\x98\x11\xf5\xb9\x03\x92\x51\xbe\xb1\xed\x69\x79\x8b\xe4\x0c\x43\xd2\xe7\x8a\xda\xfa\x11\x65\xcc\x9c\xca\x13\x8a\x46\xda\x96\xb2\x40\x83\x92\xf3\x13\x28\x2d\x13\x53\x04\xa0\x12\x14\x68\x43\x64\xf6\xec\xfb\x80\xaa\x83\xdf\x8a\xa4\xda\x0a\xbf\xd4\x65\xaa\xdd\xc3\x8f\x30\xa1\xc0\x18\x7e\xfd\x80\xaa\x83\xdf\x8a\xa4\xda\x0a\xbf\x94\xcc\x2c\x32\x82\x5f\xf1\xd4\xf2\xc6\x40\x29\xbd\xcf\x46\x24\x2f\x1d\xae\xae\x72\x64\x1e\x4b\x5f\x83\x52\x78\xbc\x27\x2b\xf3\x9b\x43\xdb\x24\xaa\x7c\xf3\xb1\x5a\x60\x64\x32\xd2\x95\xa1\x28\x2c\x15\x8c\x40\x14\x4d\x0a\x56\x6a\x07\x6b\xc7\x8e\x14\x53\xfb\x79\xea\x91\xbb\xd2\x82\x08\xe6\xbb\xfc\x85\xf0\xe7\x72\x12\x2f\xfb\x96\x68\x49\x9f\x82\x0c\x22\x34\x64\x32\x4b\x2f\xfc\x5b\xfe\x79\xbe\x30\x09\x61\xb9\xcc\xbc\xfa\x6f\x28\x98\xb3\x5a\x00\x18\xd2\xa5\x14\x01\xa2\x52\xbc\x5f\xbe\x15\xc6\x24\xca\x1c\x45\x81\xc9\x84\x53\xea\xe8\xf4\x9a\x17\xb4\xa3\xf0\x6b\x3f\x01\xbb\x54\xae\x75\x6c\x24\x86\x74\xac\xf7\xe3\x5a\x64\x13\x6e\x4f\x71\x0f\x32\x9a\xd0\x14\xb0\x56\x3c\xed\xec\x80\x67\x92\xe7\x91\x58\x0b\xb9\xa7\xc0\xeb\x2c\x5e\x53\x81\x77\x25\xc8\x1e\xe3\xae\x94\x99\x66\x7e\xdc\x5d\x70\x2d\x67\x4b\x31\xf4\xdc\xa1\x44\xbf\x6c\x6e\x7c\xf0\xff\x10\x1a\x8b\xc4\x4d\x4f\x7c\x68\x21\x98\xa6\x9e\xad\xe1\x49\x27\x82\xec\x61\x02\x28\xee\xd3\xdf\x14\x22\x05\xba\xb5\xb0\x1c\x93\xfe\x99\x22\xe3\x45\xb9\xe7\xeb\x70\xa1\x48\x59\xbd\x4f\x0f\xbf\xd9\xbf\xde\xdc\xfd\xfe\x60\x7f\xfe\xf5\xe6\xc1\xfe\xfd\xee\xee\xe2\xbe\x7f\x3e\xb8\xb0\xfb\x9f\xcf\xef\x07\xe8\x7f\xd1\xca\x0b\x37\xb7\x37\x17\x95\x29\x41\x86\xf3\x6e\x94\xd7\x5f\x57\x82\xb9\x73\x2b\xa4\x04\x45\x3c\x63\x63\x95\x40\xc4\x9d\xd9\xa5\x16\xcc\x07\x0c\x75\xea\xd0\x84\x58\x64\x5d\x1d\x62\x97\x5b\x48\x1b\x0a\xb8\xeb\xc6\x2a\xc3\x8b\x47\x70\x31\x75\x80\x4f\x00\x3b\x88\x99\x77\x30\x97\x56\x6c\x1c\xb8\xa6\xc0\xb3\xe2\x90\x65\x3f\x43\xe5\x8c\x19\xbe\xe0\x1a\x54\x36\xb3\xc3\xcd\x66\xbd\xef\xb2\x59\x7b\x34\xb7\xbb\xc1\xae\x51\xeb\x5b\x34\xb1\x4b\xcd\xe2\xef\xdc\x89\x93\xc8\x80\x04\x63\x6b\xe6\xc1\x17\x08\xf7\xc2\x7d\xc7\xfd\xf9\x9b\x0a\x89\xcc\xaa\x1d\x89\xe0\x0e\x96\x33\x9b\x12\xc1\xed\x1d\x7f\x2d\xdf\xd4\x71\x93\x5b\x68\x4a\x78\x50\x31\xf0\xfb\x13\x20\xcb\xf5\x1b\xd1\x40\x5d\x70\x0d\xf2\x61\x02\x54\xde\xf8\xee\x10\x64\x09\xa5\x6e\x21\x4b\x14\xf2\x44\x11\x53\x93\x31\x5a\xd2\xb1\xd5\xd6\x35\x5d\xdf\xd6\x2b\x47\x8c\x3d\xcf\x46\x25\x0a\x25\x89\xf4\x84\x2a\x44\x47\x68\x26\x7c\x34\xa5\x8c\xa1\xf8\xd3\x08\x23\x05\x92\x62\x86\x78\x38\x62\x68\x24\x85\x8b\x74\x38\x65\x0d\x57\xa0\x9f\xc3\xf5\x4a\xdc\xa1\x23\xf1\xd4\xa6\xdc\xa1\x61\xd0\xbe\xfb\x4a\x98\x72\x74\xf3\x1f\x4d\xd3\xcd\x6f\x64\x82\xf9\xd8\xb4\xdc\x6a\x93\x72\xc6\x5c\x4b\xd0\xce\x02\x9c\x0e\x55\x3d\x39\x82\xa7\x68\xb4\x3a\xd5\x2c\xa0\x9a\xff\xdd\x0c\xd5\xbc\x8f\x4e\x2a\x2b\x59\x39\x97\xd4\x12\x51\x85\xe2\xcf\xa4\x16\xb6\x27\xb1\x5f\x52\xd1\x84\x76\x76\x4a\xba\xaa\xa4\x81\x0a\x6e\x56\xca\x40\x1e\x2e\xe6\x4e\xa0\x2d\xb3\x4e\x43\x53\x35\xf4\x9f\xcd\xd0\xd0\x73\xc6\xc4\xf4\xda\x67\x9a\x7e\xc0\xdc\x29\x41\x39\x43\x5e\x47\x01\xb3\xc2\xda\xb8\xdc\xa6\x4e\x11\x93\xbc\xa5\x8b\x67\x68\x2a\xe4\x63\xa8\x83\x0a\xbb\x2f\xfa\x27\x38\x72\x83\xb1\xf3\x18\xa0\x21\xe6\x8e\xd1\x2e\x9a\x03\x53\xc2\xc4\x0d\x5d\xf3\x26\xd6\xa1\x84\xd7\xc2\x29\xc3\x43\x46\x4a\x18\x30\x2b\x41\x09\x4d\xd9\x74\x4a\xc8\x11\x5d\x50\x42\x57\x38\xd0\x29\x61\xba\x12\x66\xa5\x7f\xab\xd4\xc2\xbe\xf0\xb9\xbe\x03\x59\x92\x23\x0c\xd9\xa1\x50\x83\x14\xf2\x40\xa2\xad\x7c\xe2\x62\xe3\x3a\x65\x4c\x0a\x4d\x63\x7d\xa3\x20\x15\x22\xe1\xd8\x8f\x84\x44\x80\xc9\x24\x74\x83\x48\x81\x87\x25\xd6\xc0\xba\xa8\x34\x43\x17\x2b\x0e\x4b\xf7\x73\x75\x2b\xdd\x28\xdc\x09\xca\xb5\x0a\x91\x39\x08\xfc\x45\xa8\xd6\x66\xf3\xa4\x16\xad\x5a\x1d\x77\x05\xd8\x15\xa3\x89\x6b\xca\x81\x1b\xb1\x6f\x13\x9e\xba\xb5\xf7\xca\xf0\xe4\x01\xa1\x23\x4a\x62\x0b\x45\xcd\x22\xd8\x36\x61\xaa\x2b\x40\xda\x29\xa6\xd6\x81\x84\xee\x24\x8c\xe8\xd3\xfe\x22\x2a\xa3\xaa\xa8\x43\x54\xa9\x56\xea\x56\x4f\x40\x86\x6e\x0f\x13\xb3\xe3\x62\xda\x84\xa7\x8a\x6b\x20\xf6\x13\x4f\x85\x4f\x56\xdb\x90\x65\x8b\x66\x9c\xfb\x0a\xbd\x8a\x97\xf8\xf7\x13\x7a\xe9\x08\x8a\xd7\x1a\x8f\x42\x24\xa1\x8b\x27\x4f\x82\x52\x86\x2b\xdb\x6d\x82\x53\xc5\xcb\xd2\xeb\x65\x8c\xc1\x34\x29\x9e\x73\x47\x6e\xa4\x50\x4d\xe3\x1a\x97\xa6\x67\xe4\x72\x95\x1c\x7a\x2f\x7e\x95\xc4\x1e\x35\xba\x8f\x2c\x4e\x6a\xab\x97\x45\xdf\x30\xd7\xfd\xf1\x5b\xbf\x8f\x80\x6b\xaa\x8d\xf2\x17\xd1\x96\x1b\xcf\x97\x9e\x50\x60\xf5\x1c\x3a\xa6\x59\x03\xd8\x98\xcc\x58\x7d\xdb\xca\x96\x50\x17\xcf\xf0\xb7\x46\xef\x12\x9f\x83\xc4\x2f\x29\x92\x2d\x69\x2b\x7a\xeb\xdb\x05\x36\x47\x5d\x3c\x0f\x2c\xc1\xfa\x26\x71\x3a\x24\x04\xab\xf9\x94\x9a\x3c\x4f\xa9\x5f\x29\x00\xc4\xe1\x49\x23\xe1\x05\x6f\xfe\xd7\x21\x60\xba\xbe\xdd\xee\x29\x48\x8c\xf3\x1a\xa5\xa0\xba\x40\x8e\xa4\x91\xb8\x3e\x47\x44\xb8\x2e\x3e\x9a\x2f\xbf\x39\x88\x51\xa5\x91\x18\x21\x4f\x52\x17\xcb\x59\x14\x47\x78\x05\xfa\x9b\x6b\xa7\xc3\xc7\xab\x9f\x2e\x7f\xfa\x64\xae\x0e\x7b\xbd\x27\xb8\xea\x14\xd5\xba\xea\x84\x99\x9b\x2d\x9c\xc0\x02\x7d\xeb\x55\x24\x9f\xe9\xd7\x13\xac\x91\x23\x10\x17\x1a\xb9\x58\x93\x09\xc2\x7c\x16\xe8\x51\x58\x85\x19\x26\xc2\x08\xd6\x30\x16\xb1\x43\x88\x42\x9c\xd0\x98\xfc\xb4\x12\xf0\xfc\xb4\xea\x42\x66\x07\xe1\x2f\x6a\xdf\x44\x17\x4f\xf7\xc3\xd9\xfe\x1d\xd6\x1a\xa4\xe1\x41\x29\xe9\x7c\x5a\xaf\x04\xe7\x48\xc2\xd8\x67\x58\x22\x78\x4e\x83\x44\x98\x8f\xb1\x0a\x0a\x8d\x7c\x19\xe2\x7c\x3a\xa1\x64\xf2\x52\x8b\x1c\x6e\x44\x9e\x17\x7d\x60\xb5\x58\x09\xd2\x02\x54\x56\x9c\x13\x59\x3f\x67\x7e\x57\x10\x31\x4e\xb0\xe5\x3e\xa0\x3f\xbb\xcf\xc9\xfd\x4e\xab\xfa\x0a\x95\x28\x08\x41\x52\x4b\xbe\x92\x9a\x9a\x9e\xd2\x0b\xa3\x99\x8b\x8d\x59\x91\x24\xa6\x4b\x3a\xfe\xdc\x2e\x53\x2e\x65\x5d\x5b\x58\x84\xbc\x40\xe5\x57\x12\x9b\x02\xd5\x5f\x0b\xc9\x28\x44\x15\xc2\x0b\x46\xc0\xf4\xeb\x5b\x5d\xbd\x68\x56\xf6\x85\x32\x0c\x11\xca\x34\x46\x49\xdf\xce\x75\x42\x6f\x1a\x71\xbe\x43\xae\x93\x28\x37\x9e\xd8\xfb\xd2\xd3\x74\xdb\x9a\x7c\xf1\x62\x89\x2a\xfe\xf5\xee\x5b\x49\x1a\xfe\xf5\xee\x5b\xbc\x84\xbd\xbd\x82\x7f\xbd\xfb\xd6\xe9\x77\x1e\xfd\x8e\xe6\x87\x08\x13\x22\xa4\x43\xf9\x18\x69\x11\x3e\xef\x7f\x41\x81\x3c\xa4\xcf\x40\x75\x8a\x5f\x97\xe2\x67\x46\x3f\x35\x2b\xfe\xa6\x7d\x87\x49\x3d\xcb\xb9\xf7\x70\x7b\xfd\x2f\xc8\xe8\x30\x6d\x40\xbe\xcd\x87\x9d\x05\xa8\xc3\x02\x64\xac\x2f\xa0\x42\x16\xa0\x31\xf3\xb3\xdd\x96\x40\xac\xdf\xbb\xd6\x71\xa9\x89\x4b\x8b\xae\xc6\x48\x41\xf3\xce\xee\xfa\x3e\x77\xfe\xf4\x95\x76\x81\xeb\xf8\x64\x47\x0f\xc0\x59\x78\x18\xb3\x5b\x55\x40\x31\x05\x99\x70\x84\xcf\xea\x7b\xbe\xe7\x05\xef\xfd\x63\x6d\xfa\x90\x50\xc3\xe5\x83\xd5\x3b\x59\xcb\x5e\xaf\xbe\xa8\x34\x78\x36\xe5\x44\x42\xd4\xbc\xb5\xf1\x5a\x1b\x5a\x3c\x86\x25\x82\x95\xb6\x6c\x18\x1e\xcf\x63\x81\xd5\xa7\x82\x2f\x5e\x4a\xeb\x62\xca\x4b\xbd\x7a\x37\xf3\x92\xcf\x35\x23\x46\x35\x83\x44\xcf\xfa\x19\x18\x13\x28\xe5\x08\xa8\xdd\xde\xdd\xfb\x7c\x23\xa4\x14\x42\x2f\xa7\xa2\x8c\x63\x9c\x22\xa9\xa7\xc2\x29\xa7\x3c\x37\xca\x5c\x03\xf7\x3f\x60\xf9\x22\xfc\xe0\x41\x1b\xee\xd6\x0d\xda\xf9\xab\x06\x37\x6e\x39\x70\xff\x92\x06\x6d\x6a\x66\x9a\x30\x3d\x38\xb7\x83\x66\x9b\xb0\x32\xba\x80\x6c\x45\x37\x94\x3f\x74\xd7\xe5\x9b\x35\xc4\xb1\xed\x8c\xe8\x52\x46\x78\xab\x51\xde\x76\xa4\x51\xe6\xbc\x2b\xbd\x63\xeb\xd8\xb9\x81\x69\x4a\xe7\xb6\xee\x60\x19\x9d\x4c\xe2\x31\xbf\x7b\xef\x06\xa6\xaf\x5f\xbf\x2e\xc2\xc1\x10\x4d\x31\x93\x8c\x39\x40\xc6\xf4\x18\x95\x26\xaa\x5b\x0f\xd2\xa6\xc5\x49\x9d\x6c\x94\xac\x82\xb6\x1f\x94\xb0\x06\xf8\x3b\x9c\xab\xb6\x8a\x2b\x68\x3d\x3a\x57\x7b\x2a\xb1\x41\x54\xe1\x22\xe4\xb2\xe8\xd4\xfc\x71\x20\xbf\xe3\x66\x8b\xae\x76\x7c\x5f\x3c\x79\x42\xea\x3e\x1e\x4a\xca\x98\x68\xf6\x60\x99\x44\x26\x51\xbf\x90\x3d\xef\xd9\x9e\xaa\x40\x96\x50\xcf\x3f\xfe\x7a\xb9\x7f\x02\x0d\x7a\x75\x80\xc2\xec\x0f\xfe\xd8\x3b\x59\xf6\x07\xf6\x1f\x7b\x2a\xca\x3c\xae\xe9\xa4\xd9\x02\xad\x1d\xf8\x83\xf8\xaa\xe1\x66\x0f\x93\xd1\x74\x79\xde\xa5\x2a\x51\x8f\xd0\x29\x26\x04\x58\x7c\x69\xcf\x23\xcc\xce\x2c\x0f\x24\x15\x8e\x85\x14\x1d\x73\xcc\xce\x2c\x4c\x34\xfd\x8e\x35\x58\xc8\x15\x0e\x1d\x51\x90\x81\x60\x3e\xfe\x66\xf7\x6f\x6f\x1e\xee\x6f\xaf\xec\xeb\xf3\xc1\x6f\x49\x77\x4e\xc4\x1f\x68\x96\x62\xbd\x6b\x36\x62\x6a\x57\xac\x2f\x3e\xd5\xcd\x1e\x22\x23\xa5\x0a\xba\x53\xab\x36\xfd\x55\xbf\x22\xa5\x13\x1a\xad\xf6\x6d\x55\xe8\xb8\x0e\xb6\x0b\x27\x11\x68\x4d\x4f\x6a\x06\xcd\x6e\x70\x52\x73\x2f\x73\x98\xc1\x98\xf7\x19\xe0\xe8\xd6\xb2\x4b\x0a\xcc\x69\x9d\xe3\xdf\x5c\x61\x11\x74\x30\xaa\xac\x08\x7a\x89\x46\x61\x37\x4b\x36\x87\xd1\x47\xc2\x61\x44\x97\x85\x3f\x50\x9a\x71\x24\xf5\x1b\xc7\xb2\xf0\xf9\x49\x68\xd1\x62\x78\xa6\x63\x26\xe8\x18\xb2\x1b\x03\x19\xd8\x1f\xc8\x04\xff\x5d\x61\xa5\xbf\x0c\x6e\xdb\x06\x97\x8d\xd6\x2c\xe8\x5b\x68\xcc\x18\x56\x1a\x7d\x19\xdc\x96\x9c\x24\x08\xd8\xdb\x57\x5b\xf0\x2e\x0d\x90\x6c\x7f\x00\x79\x25\xc6\x2d\xc4\x62\x86\xbb\xbb\x12\xe3\x4a\xf1\x51\xeb\x5c\xb7\xd1\x62\xab\x70\x64\xee\xb1\x43\x45\x32\xc0\x07\x77\xcd\x1e\x25\xc3\x7c\x11\x96\x64\x82\x7e\xc4\xae\xf7\x0b\xba\x13\x3e\x27\x85\xbe\x50\xd4\x10\xae\xb0\x09\x6d\xdf\x16\xf4\x61\xbd\x2e\x56\xb6\x0c\xa4\xb7\x8d\x3d\x56\x6d\xb4\xc7\x19\x98\xbd\xf7\x5b\x5a\x10\x90\x08\xda\x7b\x3f\x73\x73\x6c\x1a\xc7\x92\x40\x5a\x14\x64\x2b\x6c\xc6\x52\xf8\x9e\xd5\x7b\xb1\x2a\xc5\x90\x2a\xeb\x47\x6a\x33\x53\x43\x4b\x65\x9a\x4b\xc4\x0d\x4f\x0e\x45\x0d\x6f\x70\x7a\x68\xb1\xe6\x2d\x75\x94\xb7\x1a\xe9\x6d\x47\x1b\x95\x12\xcd\x46\x7d\xeb\x63\xc6\x28\x1f\xed\x51\xe5\x42\xd0\x23\x3b\xe8\xd2\x3e\x86\xb4\x69\x62\x1c\x10\x21\xd3\xaa\x33\x93\xfa\xd9\x70\x19\xda\x61\x7f\x0e\x49\x80\xf7\x81\x67\xdb\x1b\xf9\x7d\x19\xdc\x22\x3b\xe8\x52\xf3\x45\xd8\x4c\xf7\xfe\x19\x98\xd7\x42\xe7\x1e\x34\xbb\x25\xae\x3d\x65\x84\xb7\x1a\xe5\x6d\x47\x1a\x95\x62\x50\x82\x9e\x9d\x0f\x85\xdf\xd2\x35\xea\x9e\x1d\x36\xfe\x90\x2d\x47\x8b\x36\xf6\xa5\x9c\xa0\xb1\x79\x63\x5f\xbe\x1d\x4a\x03\x22\x05\x63\xe0\x2c\xee\x52\x63\x62\xfc\x07\x85\x69\x78\x88\x3e\xe5\x20\x37\x6c\x58\x9a\x52\x47\x4f\x6c\x09\x7f\xf9\xa0\xb4\xd5\xfb\xf9\xe7\xd4\x53\xb5\xca\xde\xea\x64\x42\xa6\x26\xd8\x11\x53\x3b\x30\x6d\x56\x8f\xa6\x26\x00\xf2\x7a\x94\x07\x09\x10\x0c\xd2\xd2\x88\xe5\x70\x28\x13\xa0\xe3\x89\x7e\x19\xad\xe3\xb7\x46\x67\x67\xd7\x73\xcc\x79\xd6\x26\xc3\xcc\xd6\x16\x25\x9c\xa8\x10\x96\xb6\x27\x18\x25\x33\xab\xc7\xb1\xf6\xe5\x86\x93\x9f\x56\xbf\xbd\x3d\x8b\x09\x60\x07\xa4\xb2\x09\xa3\xe4\x11\x87\xc3\x6e\x3c\x76\xc0\x03\x42\x5b\x85\x79\xd2\x02\xf4\x6a\x22\xa6\x76\x34\x8c\x20\x8b\x08\x2f\x6e\xc0\x58\x52\xc7\x0e\xac\xb6\xca\x79\x90\x56\x32\x1b\x2d\x01\xe6\x6c\x72\x06\x13\x94\x6b\x90\x1c\xb3\xa3\xf0\xcf\x33\x4b\x01\x03\x12\xd9\xb6\x5c\x81\x45\xa0\x69\x83\x67\x9a\xb9\xba\xbd\x3c\x49\x48\x48\xd5\xef\x1e\x4c\x2c\x53\x2d\xdb\xbe\xf3\x79\x87\x4f\x92\x3a\xd1\x90\x87\xf5\x20\xe1\x9f\xbb\x35\xe9\x46\x7e\xd5\xc5\x72\x4c\xb9\xcd\x60\xa4\xad\x5e\xea\x01\xa6\x29\x54\x32\x30\xc4\xe6\x64\x5a\x78\x09\x1b\xd8\x37\x10\x0d\x85\xd6\xc2\x35\xa0\x93\x62\x6a\x2b\x0f\x13\xca\xc7\x06\x54\x44\x30\xdf\xe5\x79\x08\x8d\x6e\xdf\x88\x74\x2e\xf8\x67\x52\x45\x78\x23\x5c\xd4\x86\xe3\x79\xfe\x65\xc2\x2b\x8a\x67\xc8\x04\x07\xf6\x36\xe3\xac\x8f\x75\xca\x16\x5d\xbc\x51\xe3\xe9\xef\x98\x31\x45\xc7\xa6\xe7\x9c\x2e\x52\x55\x1d\x31\xed\xe2\x7c\x5f\x2a\x51\x3f\xee\x93\x09\xeb\x5c\x27\x5c\x07\x8c\x4d\x98\x1e\xc0\xf9\xd6\xf5\xe1\x5d\x07\xb2\xbe\x07\x4f\x48\x6d\x06\xf9\x55\xc2\x3d\x41\x7d\xd4\x23\x13\xc6\x2e\x7e\xb2\x19\xf0\xb1\x9e\x58\xbd\x8c\x13\xfe\x37\x58\x72\x23\xca\xe0\x93\xc5\xa9\x73\x29\xe9\xfd\xe0\xc1\x5c\x47\xeb\x3a\x62\x3b\xf3\x30\xaf\x06\xeb\xdd\x8d\xef\x0e\x41\x16\xd0\xbb\x05\xc2\x3d\xd1\xbb\xa8\x47\x85\xd5\x27\xe3\xa8\xf4\x82\x0a\xf0\xff\xdb\x03\x7f\x23\xed\x6f\x06\xfc\xdd\x59\x11\x9f\xb3\x44\xd5\x7a\xe0\x5f\xcf\x62\x6f\x83\x5e\xf5\xb5\x64\x47\xd2\xe8\x52\x83\xce\xed\x98\xeb\xdd\x86\x12\xa3\xb1\xc4\xc3\xa3\x48\xda\xab\x45\x46\xd7\xb7\x1f\x8f\x53\x2a\x8c\x9a\xe2\xcb\xea\xbb\xef\xcd\x9d\x15\x71\x64\x4b\x54\x95\x28\xb3\x02\xae\x68\x54\x83\x69\x3c\x85\xdf\x66\xfa\x9f\xc7\x12\x74\xfe\xaf\x06\xff\x57\xb1\xca\xac\xe6\xab\x92\x0e\xd7\x69\x78\xbe\xea\x7a\x66\x94\xac\x02\xc6\xa8\xa7\xe8\x7f\xa0\xc0\x2d\xb4\x07\x91\xe8\xaa\x0f\x81\x2e\x28\x85\xc7\xd0\xe8\x1b\x8c\x33\x70\x18\xb5\x7e\x4f\x51\x61\x1e\xcf\x59\xbd\x8a\xaf\xe5\xe9\x0b\x77\x28\x3e\x88\xa7\x87\xd0\x7f\x04\x80\x1a\x62\xee\x84\x4f\x73\x47\x00\xcf\x14\x8d\x5f\x63\xde\xe8\xc1\x3f\x60\xee\x44\x61\xfc\xdf\x87\xd9\x61\xfc\x5a\x00\x3a\x7c\x09\x40\x3d\xe1\xf9\x9e\x61\x81\x7b\x53\xc2\xcf\x4c\xb5\xaa\x02\x7f\xae\x70\xc0\x0c\x7f\xcf\x14\xed\xc7\xdf\xb5\x70\x20\x9e\x46\xba\x86\xf8\x73\x1b\x85\xbf\xc2\xb1\x5c\xc5\xf8\x5b\x9a\xfe\xc4\xb7\x62\x98\xce\x7f\x16\xc9\xf6\x21\x9b\x71\xf1\xb4\xf9\x76\x90\xf2\xa2\xbc\x5c\xb3\x98\x6f\xfd\xc9\xb8\x21\x6b\x4d\x49\xba\xf7\xd4\xb0\xe4\x43\xc6\x35\xab\x8d\x8a\x63\x57\x13\xe9\x85\x14\x70\x8d\xb2\xf5\x3a\x18\xa5\xd2\x3b\x35\xac\x70\xc9\xb7\xb0\xc6\x54\x9c\x7b\x5f\xba\x6d\x8a\x01\x96\xa9\xf7\x4b\xe5\x9f\x84\x85\x47\xe5\x34\x3e\x76\x5a\xbf\xff\xa9\x74\xbd\x33\x3d\x98\xa8\x64\x0c\x1a\x25\xff\x6a\xb4\xda\x8b\x18\x64\x62\x5c\x02\x02\xaf\x84\x91\x59\xd9\x57\xfc\x5d\x89\x71\x88\xbe\x2f\x83\x5b\xf4\xea\x47\xa6\x7f\xb9\xe0\x1a\xe4\x8f\x63\xfd\x4b\xc6\x5c\xa0\x29\x20\xac\xd8\x10\x2e\xa4\xc0\x7c\x4d\x5a\x9a\xfe\x7a\xfb\xf6\x5f\x66\x95\xf9\xa5\x25\x62\x8d\xfc\x5d\x8b\x52\x6e\x15\x4f\x1f\x17\x13\xb1\xb3\x3e\x66\xac\xa5\x40\xfc\x78\xf5\xf6\xfc\x43\xe6\x95\xcf\x65\x22\xb1\x7a\x3c\x15\xbf\x86\xaf\x36\x3c\x8d\xc2\xdd\x3b\x9c\xcc\x1a\x0d\xa9\xf9\xcd\x95\xc0\x9d\x72\x90\x78\x84\x1e\x3f\xff\xc7\x84\xd5\x9f\xbe\xd2\x74\x34\xb3\x7a\x61\xa9\x7d\x41\x08\x67\x36\xbf\x29\x58\xdc\xad\x6d\x6b\xed\xfd\x89\x4d\xe2\xd2\xa2\x2d\x9f\x29\xf1\x5a\xf9\x9b\x7a\xa6\x42\x3e\xba\xc2\x81\x6e\x5f\x4f\x55\xfb\x7a\x76\xb9\x43\x67\x2e\xcd\x46\x7b\xa5\x8c\x4b\xf4\xe3\xe6\x1b\x95\x3f\x74\xf1\x6f\xfc\x34\xf9\x34\xb7\xc5\x7c\x40\xb4\x05\x35\x3a\xa3\xef\x5a\x38\xe9\xd7\x9f\xe7\x17\x99\xe1\xe9\x7f\x4d\xc8\xf0\x16\xb8\xab\x7c\x95\x45\xde\x53\x06\x57\xe9\xcc\x6e\x03\x3f\x8c\xd0\x66\x33\x6c\xa5\xcf\x4b\x42\xeb\x86\x63\xff\x3a\x74\x1a\xdd\x55\xbf\x4a\x1f\x9f\x47\x98\x6c\x65\x2a\x83\x79\xbd\xc5\x15\x2d\x8a\x31\x53\xaa\x00\xca\x8f\x31\x1f\x61\x06\xb2\x0b\x30\x6b\xd9\x38\x9e\xaa\x0d\xc5\xc3\xd2\x84\xcf\x4d\x84\x2b\xc6\xc0\x41\x6c\x3c\x92\xa5\xc0\x2a\xc6\xe8\xb8\x04\xcb\x7f\x69\xe4\xfd\xf6\x75\x0d\x63\x00\xdc\x41\xd7\x58\x12\x29\xd0\xab\xcb\x63\xc3\x22\xa6\xcb\xe3\x97\x4a\x8a\xf0\x40\x14\x70\x76\x5e\x2c\xd1\x96\x58\x7b\x09\xb0\x27\x65\x00\xd6\xc8\x8f\x1d\x06\x60\x4f\x4c\x01\x7b\xd2\x22\xc0\xd6\xb8\x4e\x3c\x7a\x57\x06\x60\x8d\xaa\x0a\x0f\x03\xb0\xef\x4c\x01\xfb\xae\x45\x80\xad\xb1\xb8\x66\xf4\xbe\x0c\xc0\x1a\x2d\xb3\x1e\x06\x60\x7f\x36\x05\xec\xfb\x16\x01\x36\xc3\x40\xed\xb8\x7e\x72\x74\x9c\xb7\x6a\xb2\x8e\x94\x43\xce\xc3\xfd\x5a\x90\x8e\x4a\xa9\xab\xc8\xac\xa8\xd8\xb5\xe8\x4f\x3a\xd1\x57\xb1\xe0\xdf\x44\xd1\xbf\xeb\x44\x5f\xc5\xe9\x4d\x4d\x14\xfd\xfb\x4e\xf4\xa5\x89\xbe\xc8\x4e\xcd\x8a\x45\xbf\xb4\xca\xa6\x85\x57\x42\x78\x7a\x31\x30\x2a\xf9\xe2\xe1\x76\x8b\x97\x6f\xb7\x6f\x9d\xa3\xfc\xd0\x56\x0b\x2f\x2c\xd9\xed\x7f\x8d\x7e\x76\xa9\x52\x54\x70\xf4\xea\x62\xd0\x37\x0c\x74\x2f\x14\xc1\x1e\xb4\x28\xd8\xad\x58\x01\x1a\x5d\x71\x30\xaf\x83\x33\xae\x85\x9c\xe4\x5a\x94\x49\x14\x62\xaa\x5e\x4f\x3d\xb7\x32\x93\x5b\x78\xe3\x4c\x87\x9e\xad\xab\x28\x0b\x1f\x99\x9e\x51\x6c\xe1\x01\x38\x46\xc5\x31\x79\xeb\x2f\x9b\xb2\x06\x5b\x31\xee\x06\x1e\xe5\x4b\xae\x3b\x18\xe0\x26\x47\x6e\x9b\x77\x49\x7d\x45\x21\x4a\xe2\x7d\xea\xca\xe8\xb8\xb3\x39\xd2\x09\x70\x6d\x76\x4e\x52\x71\x43\xb9\x78\xc4\x9a\x79\x8c\x3f\xdf\x31\x61\x44\xb9\x76\xc4\x9a\x11\xb5\xf9\x71\x68\x2b\x0c\xb0\x13\x68\xa5\x0b\x5c\x5b\xbd\x10\x70\xe7\xcf\x0f\x8c\x02\x3e\xdf\x05\x49\x49\x0e\x0c\x65\xdd\x4d\xda\x88\x1d\xd1\x85\xcf\x23\xe8\xdc\x54\x09\x41\xce\x52\x25\x84\x91\x2a\xec\xc2\xc5\x05\x31\xfb\xc3\xb7\x66\x17\x80\x16\x9e\xc9\x96\x82\xd7\x16\x95\x18\xa5\xf4\xb7\xfc\x12\x23\xa5\xb1\xf6\x55\x57\x63\x54\x57\x11\xfb\x71\x99\x55\xec\x13\xec\x32\x3a\x1c\x84\x22\x6d\xb4\xc9\x4d\x37\x63\x9f\xc3\x2e\x54\x66\x90\xda\x52\x25\xb3\x20\x64\x32\x6d\xb5\x80\xfb\x5f\x9b\xef\x6d\xea\x13\xae\xf3\x44\x48\xab\xc5\xfb\xf1\x5b\x3f\x23\xfb\xda\x94\xd9\x72\x7d\x02\x56\xc4\x6b\xb5\x7c\x07\xfd\x8c\xcb\xf2\x9b\x32\xbb\x39\xb4\x82\xf4\x94\x18\x62\x73\xb4\xb8\xdc\xc7\x85\x1f\x5f\x7e\x38\x7d\x13\x5e\x42\x37\xc2\x04\x7a\x3f\xfc\x5f\x00\x00\x00\xff\xff\x73\xa9\xbc\xff\x87\x37\x01\x00")

func contestGladeBytes() ([]byte, error) {
	return bindataRead(
		_contestGlade,
		"contest.glade",
	)
}

func contestGlade() (*asset, error) {
	bytes, err := contestGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "contest.glade", size: 79751, mode: os.FileMode(0664), modTime: time.Unix(1609849676, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x35, 0xca, 0xe3, 0xae, 0x74, 0x2c, 0xa4, 0x5e, 0x2, 0x20, 0x91, 0xe3, 0xbb, 0x84, 0x60, 0x1f, 0xce, 0x81, 0xc2, 0x19, 0xe3, 0x87, 0xfc, 0x88, 0xd7, 0x14, 0xe7, 0xcc, 0xbb, 0x94, 0x87}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"contest.glade": contestGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"contest.glade": &bintree{contestGlade, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
